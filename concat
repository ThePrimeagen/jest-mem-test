#!/usr/bin/env python3
import os
import re
from collections import defaultdict
import sys

def concatenate_files(input_dir, output_dir):
    # Function to extract the base name from a file name
    def extract_base_name(file_name):
        match = re.match(r"^(.+?)_\d+$", file_name)
        return match.group(1) if match else None

    # Grouping files by their base names
    file_groups = defaultdict(list)
    for file_name in os.listdir(input_dir):
        base_name = extract_base_name(file_name)
        if base_name:
            file_groups[base_name].append(file_name)

    # Ensuring the output directory exists
    os.makedirs(output_dir, exist_ok=True)

    # Concatenating and writing the files
    for base_name, files in file_groups.items():
        with open(os.path.join(output_dir, base_name), 'w') as outfile:
            for file in sorted(files, key=lambda x: int(x.split('_')[-1])):
                with open(os.path.join(input_dir, file), 'r') as infile:
                    lines = infile.readlines()
                    # Skipping the first and last value (line) of each file
                    for line in lines[7:-5]:
                        outfile.write(line)

    print("Files have been concatenated based on their base names.")

# You can call this function with your input and output directories
if len(sys.argv) == 3:
    concatenate_files(sys.argv[1], sys.argv[2])
else:
    print("Incorrect number of arguments. Please provide input and output directory paths.")

